name: 'Destroy Chapter 3'
on:
 workflow_dispatch:

permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
  ARM_CLIENT_SECRET: "${{ secrets.AZURE_CLIENT_SECRET }}"

jobs:
  destroy-bookapp-container:
    name: 'Destroy Bookapp Container App'
    runs-on: ubuntu-latest
    environment: prod
    defaults:
      run:
        shell: bash
        working-directory: ./ch6/bookapp/infra
    
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Terraform Destroy
    - name: Terraform Destroy
      run: terraform destroy -auto-approve

  terraform-destroy:
    name: 'Destroy ACC and ACR'
    runs-on: ubuntu-latest
    environment: prod
    defaults:
      run:
        shell: bash
        working-directory: ./ch6
    
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Terraform Destroy
    - name: Terraform Destroy
      run: terraform destroy -auto-approve
